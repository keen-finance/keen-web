/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RewardToken,
  RewardTokenInterface,
} from "../../../contracts/RewardToken.sol/RewardToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_storage",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "HARD_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_store",
        type: "address",
      },
    ],
    name: "setStorage",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "store",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200167938038062001679833981810160405260208110156200003757600080fd5b5051604080518082018252601181527025b2b2b7102932bbb0b932102a37b5b2b760791b60208281019182528351808501909452600484526325a2a2a760e11b90840152815184936a084595161401484a00000093929091601291620000a1916003919062000433565b508151620000b790600490602085019062000433565b506005805460ff191660ff9290921691909117905550620000ec9050620000dd620001e9565b6001600160e01b03620001ee16565b6000811162000142576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b6007556001600160a01b038116620001a1576040805162461bcd60e51b815260206004820152601e60248201527f6e65772073746f726167652073686f756c646e277420626520656d7074790000604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055620001cb62000240565b620001e2620000dd6001600160e01b036200026816565b50620004d5565b335b90565b620002098160066200027760201b62000f271790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b62000266620002576001600160e01b03620001e916565b6001600160e01b036200030416565b565b6008546001600160a01b031690565b6200028c82826001600160e01b036200035616565b15620002df576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6200031f816006620003bf60201b62000dd01790919060201c565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166200039f5760405162461bcd60e51b8152600401808060200182810382526022815260200180620016576022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b620003d482826001600160e01b036200035616565b620004115760405162461bcd60e51b8152600401808060200182810382526021815260200180620016366021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200047657805160ff1916838001178555620004a6565b82800160010185558215620004a6579182015b82811115620004a657825182559160200191906001019062000489565b50620004b4929150620004b8565b5090565b620001eb91905b80821115620004b45760008155600101620004bf565b61115180620004e56000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80639137c1a7116100ad578063a457c2d711610071578063a457c2d714610348578063a9059cbb14610374578063aa271e1a146103a0578063dd62ed3e146103c6578063f2b9fdb8146103f45761012c565b80639137c1a7146102e257806395d89b411461030a578063975057e714610312578063983b2d561461031a57806398650275146103405761012c565b8063355274ea116100f4578063355274ea1461025c57806339509351146102645780633a03171c146102905780635aa6e6751461029857806370a08231146102bc5761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b610139610420565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356104b6565b604080519115158252519081900360200190f35b6101f66104d3565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356104d9565b610246610566565b6040805160ff9092168252519081900360200190f35b6101f661056f565b6101da6004803603604081101561027a57600080fd5b506001600160a01b038135169060200135610575565b6101f66105c9565b6102a06105d8565b604080516001600160a01b039092168252519081900360200190f35b6101f6600480360360208110156102d257600080fd5b50356001600160a01b03166105e7565b610308600480360360208110156102f857600080fd5b50356001600160a01b0316610602565b005b6101396106cf565b6102a0610730565b6103086004803603602081101561033057600080fd5b50356001600160a01b031661073f565b61030861079b565b6101da6004803603604081101561035e57600080fd5b506001600160a01b0381351690602001356107ad565b6101da6004803603604081101561038a57600080fd5b506001600160a01b03813516906020013561081b565b6101da600480360360208110156103b657600080fd5b50356001600160a01b031661082f565b6101f6600480360360408110156103dc57600080fd5b506001600160a01b0381358116916020013516610848565b6101da6004803603604081101561040a57600080fd5b506001600160a01b038135169060200135610873565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b5050505050905090565b60006104ca6104c36108ca565b84846108ce565b50600192915050565b60025490565b60006104e68484846109ba565b61055c846104f26108ca565b61055785604051806060016040528060288152602001611065602891396001600160a01b038a166000908152600160205260408120906105306108ca565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b1616565b6108ce565b5060019392505050565b60055460ff1690565b60075490565b60006104ca6105826108ca565b8461055785600160006105936108ca565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bad16565b6a084595161401484a00000081565b6008546001600160a01b031690565b6001600160a01b031660009081526020819052604090205490565b6008546001600160a01b03163314610652576040805162461bcd60e51b815260206004820152600e60248201526d4e6f7420676f7665726e616e636560901b604482015290519081900360640190fd5b6001600160a01b0381166106ad576040805162461bcd60e51b815260206004820152601e60248201527f6e65772073746f726167652073686f756c646e277420626520656d7074790000604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ac5780601f10610481576101008083540402835291602001916104ac565b6008546001600160a01b031681565b6008546001600160a01b0316331461078f576040805162461bcd60e51b815260206004820152600e60248201526d4e6f7420676f7665726e616e636560901b604482015290519081900360640190fd5b61079881610c0e565b50565b6107ab6107a66108ca565b610c5d565b565b60006104ca6107ba6108ca565b84610557856040518060600160405280602581526020016110f860259139600160006107e46108ca565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b1616565b60006104ca6108286108ca565b84846109ba565b600061084260068363ffffffff610ca516565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006108856108806108ca565b61082f565b6108c05760405162461bcd60e51b81526004018080602001828103825260308152602001806110146030913960400191505060405180910390fd5b6104ca8383610d0c565b3390565b6001600160a01b0383166109135760405162461bcd60e51b81526004018080602001828103825260248152602001806110d46024913960400191505060405180910390fd5b6001600160a01b0382166109585760405162461bcd60e51b8152600401808060200182810382526022815260200180610fcc6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109ff5760405162461bcd60e51b81526004018080602001828103825260258152602001806110af6025913960400191505060405180910390fd5b6001600160a01b038216610a445760405162461bcd60e51b8152600401808060200182810382526023815260200180610fa96023913960400191505060405180910390fd5b610a8781604051806060016040528060268152602001610fee602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b1616565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610abc908263ffffffff610bad16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ba55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b6a578181015183820152602001610b52565b50505050905090810190601f168015610b975780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c07576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610c196108806108ca565b610c545760405162461bcd60e51b81526004018080602001828103825260308152602001806110146030913960400191505060405180910390fd5b61079881610d88565b610c6e60068263ffffffff610dd016565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610cec5760405162461bcd60e51b815260040180806020018281038252602281526020018061108d6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b600754610d2782610d1b6104d3565b9063ffffffff610bad16565b1115610d7a576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b610d848282610e37565b5050565b610d9960068263ffffffff610f2716565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610dda8282610ca5565b610e155760405162461bcd60e51b81526004018080602001828103825260218152602001806110446021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b038216610e92576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610ea5908263ffffffff610bad16565b6002556001600160a01b038216600090815260208190526040902054610ed1908263ffffffff610bad16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610f318282610ca5565b15610f83576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820ff912ca9547e39e8241e0d5a937e72beb1a48571197cb584cf8fb3eed9504ffb64736f6c63430005100032526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373";

type RewardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardToken__factory extends ContractFactory {
  constructor(...args: RewardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _storage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardToken> {
    return super.deploy(_storage, overrides || {}) as Promise<RewardToken>;
  }
  override getDeployTransaction(
    _storage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_storage, overrides || {});
  }
  override attach(address: string): RewardToken {
    return super.attach(address) as RewardToken;
  }
  override connect(signer: Signer): RewardToken__factory {
    return super.connect(signer) as RewardToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardTokenInterface {
    return new utils.Interface(_abi) as RewardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardToken {
    return new Contract(address, _abi, signerOrProvider) as RewardToken;
  }
}
